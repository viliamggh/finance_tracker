name: Deployment pipeline

on:
  # workflow_dispatch:
  push:
    branches:
      - main

# permissions:
#   contents: read
#   pages: write
#   id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: development
    # env:
      # ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      # ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      # ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID_PROD }}
      # ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      # ENVIRONMENT_TAG: prd
    steps:
        - name: Check out Repository
          uses: actions/checkout@v3
        
        - name: Az CLI login
          uses: azure/login@v1.4.6
        #   with:
        #     creds: '{"clientId":"${{ secrets.ARM_CLIENT_ID }}","clientSecret":"${{ secrets.ARM_CLIENT_SECRET }}","subscriptionId":"${{ secrets.ARM_SUBSCRIPTION_ID_PROD }}","tenantId":"${{ secrets.ARM_TENANT_ID }}"}'

   
        # - name: Load environment from YAML configs
        #   uses: doughepi/yaml-env-action@v1.0.0
        #   with:
        #     files: ./config/common.yml ./config/infra-${{ env.ENVIRONMENT_TAG }}.yml

        # - name: Setup other env variables
        #   run: |
        #     echo "BASE_NAME=atc-${{ env.PROJECT }}-${{ env.ENVIRONMENT_TAG }}-${{ env.REGION_SHORTCUT }}" >> $GITHUB_ENV

        #     echo "BASE_NAME_NO_DASH=atc${{ env.PROJECT }}${{ env.ENVIRONMENT_TAG }}${{ env.REGION_SHORTCUT }}" >> $GITHUB_ENV
        #     export BASE_NAME_NO_DASH="atc${{ env.PROJECT }}${{ env.ENVIRONMENT_TAG }}${{ env.REGION_SHORTCUT }}" # this is for context of these bash commands only
            
        #     echo "ST_TF_NAME=sttf$BASE_NAME_NO_DASH" >> $GITHUB_ENV

        # - uses: azure/arm-deploy@v1
        #   with:
        #     scope: resourcegroup
        #     resourceGroupName: ${{ env.RG_NAME}}
        #     region: ${{ env.REGION }}
        #     template: ./main.bicep
        #     parameters: tfSaName=${{ env.ST_TF_NAME }} tfCntrName=${{ env.CNTR_TF_NAME }} environmentTag=${{ env.ENVIRONMENT_TAG }} 

        # - uses: cschleiden/replace-tokens@v1.2
        #   with:
        #     tokenPrefix: '__'
        #     tokenSuffix: '__'
        #     files: '["**/*"]'
        
        # # Install the latest version of the Terraform CLI
        # - name: Setup Terraform
        #   uses: hashicorp/setup-terraform@v2
        #   with:
        #     terraform_version: ${{ env.TF_VERSION }}

        # - name: Terraform init
        #   id: init
        #   working-directory: ./terraform
        #   run: terraform init -backend-config=../config/tfbackend.conf

        # - name: Terraform Plan
        #   working-directory: ./terraform
        #   run: terraform plan

        # - name: Terraform Apply
        #   working-directory: ./terraform
        #   run: terraform apply -auto-approve


    


    
  
